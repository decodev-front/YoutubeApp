{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/shared/navbar/navbar.component.ts","webpack:///src/app/components/shared/navbar/navbar.component.html","webpack:///src/app/pipes/video-youtube.pipe.ts","webpack:///src/app/services/youtube.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","_youtubeService","videos","getVideos","subscribe","video","videoSeleccionado","$","modal","push","apply","cargarMas","styles","NavbarComponent","VideoYoutubePipe","domSanitizer","value","url","bypassSecurityTrustResourceUrl","name","YoutubeService","http","youtubeUrl","apiKey","playlistId","nextPageToken","params","get","pipe","response","items","snippet","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'YoutubeApp';\n}\n","<app-navbar></app-navbar>\n\n\n<app-home></app-home>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { VideoYoutubePipe } from './pipes/video-youtube.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    VideoYoutubePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { YoutubeService } from '../../services/youtube.service';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  videos:any[] = [];\n  videoSeleccionado:any;\n\n  constructor(\n    private _youtubeService : YoutubeService\n  ) { \n    this._youtubeService.getVideos()\n        .subscribe( videos => this.videos = videos );\n  }\n\n  ngOnInit(): void {\n  }\n\n  verVideo( video:any[] ){\n\n    this.videoSeleccionado = video;\n    $('#myModal').modal();\n\n  }\n\n  cerrarModal(){\n    this.videoSeleccionado = null;\n    $('#myModal').modal('hide');\n  }\n\n  cargarMas(){\n    this._youtubeService.getVideos()\n        .subscribe( videos => this.videos.push.apply( this.videos, videos ));\n  }\n\n}\n","<div class=\"container main-container\">\n    <h1>Canal de YouTube</h1>\n    <hr>\n\n    <div class=\"row row-cols-1 row-cols-md-3\">\n        <div class=\"col mb-4\" *ngFor=\" let video of videos\">\n            <div class=\"card\">\n                <img [src]=\"video.thumbnails.high.url\" class=\"card-img-top img-fluid\" [alt]=\" video.title \">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{{ video.title }}</h5>\n                    <button type=\"button\" (click)=\"verVideo( video )\" class=\"btn btn-outline-danger btn-block\">\n                    Ver video\n                </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-outline-primary btn-block mb-5\" (click)=\"cargarMas()\">\n        Ver más videos...\n    </button>\n\n</div>\n\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog\">\n\n\n        <div class=\"modal-content\" *ngIf=\"videoSeleccionado\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ videoSeleccionado?.title }}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <iframe width=\"100%\" height=\"300\" [src]=\" videoSeleccionado.resourceId.videoId | videoYoutube \" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\">Atrás</button>\n            </div>\n        </div>\n\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: []\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Image and text -->\n<nav class=\"navbar navbar-inverse bg-danger bg-faded \">\n    <a class=\"navbar-brand\">YouTubeApp</a>\n</nav>","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Pipe({\n  name: 'videoYoutube'\n})\nexport class VideoYoutubePipe implements PipeTransform {\n\n\n  constructor(\n    private domSanitizer:DomSanitizer\n  ){}\n  \n  transform(value: string): any {\n\n    let url = 'https://www.youtube.com/embed/';\n    return this.domSanitizer.bypassSecurityTrustResourceUrl( url +  value);\n\n    \n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { URLSearchParams } from 'url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YoutubeService {\n\n  private youtubeUrl = 'https://www.googleapis.com/youtube/v3';\n  private apiKey = 'AIzaSyC29U27JwXh2XpjpHapSfZ0VNG3LlnvJUg';\n  private playlistId = 'UUuaPTYj15JSkETGnEseaFFg';\n\n  private nextPageToken:string = \"\";\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  getVideos() {\n\n    let url = `${ this.youtubeUrl }/playlistItems?part=snippet&maxResults=10&playlistId=${this.playlistId}&key=${this.apiKey}`;\n    let params = new HttpParams();\n\n    if( this.nextPageToken ){\n      url += `&pageToken=${this.nextPageToken}`;\n    }\n\n    return this.http.get( url )\n                .pipe( \n                  map( (response:any) => {\n                    // console.log( response );\n                    this.nextPageToken = response.nextPageToken\n\n                    let videos:any[] = [];\n\n                    for( let video of response.items ){\n                      let snippet = video.snippet\n\n                      videos.push( snippet );\n                    }\n\n                    return videos;\n\n                  } )\n                )\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}