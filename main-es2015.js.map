{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/shared/navbar/navbar.component.ts","./src/app/components/shared/navbar/navbar.component.html","./src/app/pipes/video-youtube.pipe.ts","./src/app/services/youtube.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'YoutubeApp';\n}\n","<app-navbar></app-navbar>\n\n\n<app-home></app-home>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { VideoYoutubePipe } from './pipes/video-youtube.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    VideoYoutubePipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { YoutubeService } from '../../services/youtube.service';\n\ndeclare var $:any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  videos:any[] = [];\n  videoSeleccionado:any;\n\n  constructor(\n    private _youtubeService : YoutubeService\n  ) { \n    this._youtubeService.getVideos()\n        .subscribe( videos => this.videos = videos );\n  }\n\n  ngOnInit(): void {\n  }\n\n  verVideo( video:any[] ){\n\n    this.videoSeleccionado = video;\n    $('#myModal').modal();\n\n  }\n\n  cerrarModal(){\n    this.videoSeleccionado = null;\n    $('#myModal').modal('hide');\n  }\n\n  cargarMas(){\n    this._youtubeService.getVideos()\n        .subscribe( videos => this.videos.push.apply( this.videos, videos ));\n  }\n\n}\n","<div class=\"container main-container\">\n    <h1>Canal de YouTube</h1>\n    <hr>\n\n    <div class=\"row row-cols-1 row-cols-md-3\">\n        <div class=\"col mb-4\" *ngFor=\" let video of videos\">\n            <div class=\"card\">\n                <img [src]=\"video.thumbnails.high.url\" class=\"card-img-top img-fluid\" [alt]=\" video.title \">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{{ video.title }}</h5>\n                    <button type=\"button\" (click)=\"verVideo( video )\" class=\"btn btn-outline-danger btn-block\">\n                    Ver video\n                </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-outline-primary btn-block mb-5\" (click)=\"cargarMas()\">\n        Ver más videos...\n    </button>\n\n</div>\n\n\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog\">\n\n\n        <div class=\"modal-content\" *ngIf=\"videoSeleccionado\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ videoSeleccionado?.title }}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <iframe width=\"100%\" height=\"300\" [src]=\" videoSeleccionado.resourceId.videoId | videoYoutube \" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\">Atrás</button>\n            </div>\n        </div>\n\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: []\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Image and text -->\n<nav class=\"navbar navbar-inverse bg-danger bg-faded \">\n    <a class=\"navbar-brand\">YouTubeApp</a>\n</nav>","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Pipe({\n  name: 'videoYoutube'\n})\nexport class VideoYoutubePipe implements PipeTransform {\n\n\n  constructor(\n    private domSanitizer:DomSanitizer\n  ){}\n  \n  transform(value: string): any {\n\n    let url = 'https://www.youtube.com/embed/';\n    return this.domSanitizer.bypassSecurityTrustResourceUrl( url +  value);\n\n    \n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { URLSearchParams } from 'url';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YoutubeService {\n\n  private youtubeUrl = 'https://www.googleapis.com/youtube/v3';\n  private apiKey = 'AIzaSyC29U27JwXh2XpjpHapSfZ0VNG3LlnvJUg';\n  private playlistId = 'UUuaPTYj15JSkETGnEseaFFg';\n\n  private nextPageToken:string = \"\";\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  getVideos() {\n\n    let url = `${ this.youtubeUrl }/playlistItems?part=snippet&maxResults=10&playlistId=${this.playlistId}&key=${this.apiKey}`;\n    let params = new HttpParams();\n\n    if( this.nextPageToken ){\n      url += `&pageToken=${this.nextPageToken}`;\n    }\n\n    return this.http.get( url )\n                .pipe( \n                  map( (response:any) => {\n                    // console.log( response );\n                    this.nextPageToken = response.nextPageToken\n\n                    let videos:any[] = [];\n\n                    for( let video of response.items ){\n                      let snippet = video.snippet\n\n                      videos.push( snippet );\n                    }\n\n                    return videos;\n\n                  } )\n                )\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}